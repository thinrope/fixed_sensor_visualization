#!/usr/bin/gnuplot
unset multiplot; reset; clear;
set encoding utf8;

set term qt enh font "Arial Unicode MS,9";
set term png enhanced truecolor font "Arial Unicode MS,9" size 1920,1200 background "#f0f0f0"; set out "LUT.png";
set print "tmp/parameters.gpl";

set datafile separator ",";
set key top left;
AX="10.5 61 172 400 942 3102 22937.25"; AY="#000000 #0000FF #00FFFF #FF00FF #FF0000 #FFFF00 #FFFFFF";
print 'AX="10.5 61 172 400 942 3102 22937.25"; AY="#000000 #0000FF #00FFFF #FF00FF #FF0000 #FFFF00 #FFFFFF";';
set for [i=1:words(AX)] object word(AX,i)+0.0 rectangle center word(AX, i)+0,0.76 size 1.4,0.12 fc rgb "black" fillstyle solid 0.45 noborder;
set for [i=1:words(AX)] label i sprintf("point %d\n@ %s\n%s",i,word(AX,i), word(AY,i)) at word(AX,i),0.8 center textcolor rgb word(AY,i);
set for [i=1:words(AX)] arrow word(AX, i) from word(AX, i),0.66 to word(AX, i),0.2 lw 3 lc rgb word(AY,i);

set offsets 0.1, 0.1, 0, 0;
set log x; set xrange [word(AX,1)+0:word(AX,7)+0]; set yrange [-0.1:1.1];

set size 1.0, 1.0; set origin 0.0, 0.0; set multiplot;
set size 1.0, 0.5; set origin 0.0, 0.5;
plot for [i=1:3] "cyanhalo_lut_4xlog10.csv" u i w l lw 1 notitle;

set origin 0.0, 0.0;

#pause -1 "Press any key to see fit the data...";
R1(x)=0.0; G1(x)=0.5; B1(x)=1.0;
R2(x)=0.0; G2(x)=0.5; B2(x)=1.0;
R3(x)=0.0; G3(x)=0.5; B3(x)=1.0;
R4(x)=0.0; G4(x)=0.5; B4(x)=1.0;
R5(x)=0.0; G5(x)=0.5; B5(x)=1.0;
R6(x)=0.0; G6(x)=0.5; B6(x)=1.0;
R(x) = (x < word(AX,1)+0 ) ? word(AX,1)+0 : (x <= word(AX,2)+0) ? R1(x) : (x <= word(AX,3)+0) ? R2(x) : (x <= word(AX,4)+0) ? R3(x) : (x <= word(AX,5)+0) ? R4(x) : (x <= word(AX,6)+0) ? R5(x) : (x <= word(AX,7)+0) ? R6(x) : word(AX,7)+0;
G(x) = (x < word(AX,1)+0 ) ? word(AX,1)+0 : (x <= word(AX,2)+0) ? G1(x) : (x <= word(AX,3)+0) ? G2(x) : (x <= word(AX,4)+0) ? G3(x) : (x <= word(AX,5)+0) ? G4(x) : (x <= word(AX,6)+0) ? G5(x) : (x <= word(AX,7)+0) ? G6(x) : word(AX,7)+0;
B(x) = (x < word(AX,1)+0 ) ? word(AX,1)+0 : (x <= word(AX,2)+0) ? B1(x) : (x <= word(AX,3)+0) ? B2(x) : (x <= word(AX,4)+0) ? B3(x) : (x <= word(AX,5)+0) ? B4(x) : (x <= word(AX,6)+0) ? B5(x) : (x <= word(AX,7)+0) ? B6(x) : word(AX,7)+0;
print "R(x) = (x < word(AX,1)+0 ) ? word(AX,1)+0 : (x <= word(AX,2)+0) ? R1(x) : (x <= word(AX,3)+0) ? R2(x) : (x <= word(AX,4)+0) ? R3(x) : (x <= word(AX,5)+0) ? R4(x) : (x <= word(AX,6)+0) ? R5(x) : (x <= word(AX,7)+0) ? R6(x) : word(AX,7)+0;";
print "G(x) = (x < word(AX,1)+0 ) ? word(AX,1)+0 : (x <= word(AX,2)+0) ? G1(x) : (x <= word(AX,3)+0) ? G2(x) : (x <= word(AX,4)+0) ? G3(x) : (x <= word(AX,5)+0) ? G4(x) : (x <= word(AX,6)+0) ? G5(x) : (x <= word(AX,7)+0) ? G6(x) : word(AX,7)+0;";
print "B(x) = (x < word(AX,1)+0 ) ? word(AX,1)+0 : (x <= word(AX,2)+0) ? B1(x) : (x <= word(AX,3)+0) ? B2(x) : (x <= word(AX,4)+0) ? B3(x) : (x <= word(AX,5)+0) ? B4(x) : (x <= word(AX,6)+0) ? B5(x) : (x <= word(AX,7)+0) ? B6(x) : word(AX,7)+0;";

set xrange [word(AX,1)+0:word(AX,7)+0]; 
clear; plot R(x) w l lw 5 lc rgb "red", G(x) w l lw 5 lc rgb "green", B(x) w l lw 5 lc rgb "blue";

# :'<,'>s/\([RGB]\)3/\14/g
# :'<,'>s/\([rgb]\)3\([abcd]\)/\14\2/g
# Using 2nd order is also fine except last interval...
set xrange [word(AX,1)+0:word(AX,2)+0];
R1(x)=r1a*x**3+r1b*x**2+r1c*x+r1d; r1a=r1b=1E-10; r1c=r1d=1; fit R1(x) "<(cat cyanhalo_lut_4xlog10.csv|perl -ne 'print " . '"' . "$.,$_" . '"' ."')" u 1:2 via r1a,r1b,r1c,r1d;
G1(x)=g1a*x**3+g1b*x**2+g1c*x+g1d; g1a=g1b=1E-10; g1c=g1d=1; fit G1(x) "<(cat cyanhalo_lut_4xlog10.csv|perl -ne 'print " . '"' . "$.,$_" . '"' ."')" u 1:3 via g1a,g1b,g1c,g1d;
B1(x)=b1a*x**3+b1b*x**2+b1c*x+b1d; b1a=b1b=1E-10; b1c=b1d=1; fit B1(x) "<(cat cyanhalo_lut_4xlog10.csv|perl -ne 'print " . '"' . "$.,$_" . '"' ."')" u 1:4 via b1a,b1b,b1c,b1d;
print sprintf("R1(x) = %+0.8G *x**3 %+0.8G *x**2 %+0.8G *x %+0.8G;", r1a, r1b, r1c, r1d);
print sprintf("G1(x) = %+0.8G *x**3 %+0.8G *x**2 %+0.8G *x %+0.8G;", g1a, g1b, g1c, g1d);
print sprintf("B1(x) = %+0.8G *x**3 %+0.8G *x**2 %+0.8G *x %+0.8G;", b1a, b1b, b1c, b1d);
set xrange [word(AX,1)+0:word(AX,7)+0]; clear; replot;

set xrange [word(AX,2)+0:word(AX,3)+0]; 
R2(x)=r2a*x**3+r2b*x**2+r2c*x+r2d; r2a=r2b=1E-10; r2c=r2d=1; fit R2(x) "<(cat cyanhalo_lut_4xlog10.csv|perl -ne 'print " . '"' . "$.,$_" . '"' ."')" u 1:2 via r2a,r2b,r2c,r2d;
G2(x)=g2a*x**3+g2b*x**2+g2c*x+g2d; g2a=g2b=1E-10; g2c=g2d=1; fit G2(x) "<(cat cyanhalo_lut_4xlog10.csv|perl -ne 'print " . '"' . "$.,$_" . '"' ."')" u 1:3 via g2a,g2b,g2c,g2d;
B2(x)=1.0;
print sprintf("R2(x) = %+0.8G *x**3 %+0.8G *x**2 %+0.8G *x %+0.8G;", r2a, r2b, r2c, r2d);
print sprintf("G2(x) = %+0.8G *x**3 %+0.8G *x**2 %+0.8G *x %+0.8G;", g2a, g2b, g2c, g2d);
print sprintf("B2(x) = 1.0;");
set xrange [word(AX,1)+0:word(AX,7)+0]; clear; replot;

set xrange [word(AX,3)+0:word(AX,4)+0];
R3(x)=r3a*x**3+r3b*x**2+r3c*x+r3d; r3a=r3b=1E-10; r3c=r3d=1; fit R3(x) "<(cat cyanhalo_lut_4xlog10.csv|perl -ne 'print " . '"' . "$.,$_" . '"' ."')" u 1:2 via r3a,r3b,r3c,r3d;
G3(x)=g3a*x**3+g3b*x**2+g3c*x+g3d; g3a=g3b=1E-10; g3c=g3d=1; fit G3(x) "<(cat cyanhalo_lut_4xlog10.csv|perl -ne 'print " . '"' . "$.,$_" . '"' ."')" u 1:3 via g3a,g3b,g3c,g3d;
B3(x)=1.0;
print sprintf("R3(x) = %+0.8G *x**3 %+0.8G *x**2 %+0.8G *x %+0.8G;", r3a, r3b, r3c, r3d);
print sprintf("G3(x) = %+0.8G *x**3 %+0.8G *x**2 %+0.8G *x %+0.8G;", g3a, g3b, g3c, g3d);
print sprintf("B3(x) = 1.0;");
set xrange [word(AX,1)+0:word(AX,7)+0]; clear; replot;

set xrange [word(AX,4)+0:word(AX,5)+0];
R4(x)=1.0;
G4(x)=0.0;
B4(x)=b4a*x**3+b4b*x**2+b4c*x+b4d; b4a=b4b=1E-10; b4c=b4d=1; fit B4(x) "<(cat cyanhalo_lut_4xlog10.csv|perl -ne 'print " . '"' . "$.,$_" . '"' ."')" u 1:4 via b4a,b4b,b4c,b4d;
print sprintf("R4(x) = 1.0;");
print sprintf("G4(x) = 0.0;");
print sprintf("B4(x) = %+0.8G *x**3 %+0.8G *x**2 %+0.8G *x %+0.8G;", b4a, b4b, b4c, b4d);
set xrange [word(AX,1)+0:word(AX,7)+0]; clear; replot;

set xrange [word(AX,5)+0:word(AX,6)+0];
R5(x)=1.0;
G5(x)=g5a*x**3+g5b*x**2+g5c*x+g5d; g5a=g5b=1E-10; g5c=g5d=1; fit G5(x) "<(cat cyanhalo_lut_4xlog10.csv|perl -ne 'print " . '"' . "$.,$_" . '"' ."')" u 1:3 via g5a,g5b,g5c,g5d;
B5(x)=0.0;
print sprintf("R5(x) = 1.0;");
print sprintf("G5(x) = %+0.8G *x**3 %+0.8G *x**2 %+0.8G *x %+0.8G;", g5a, g5b, g5c, g5d);
print sprintf("B5(x) = 0.0;");
set xrange [word(AX,1)+0:word(AX,7)+0]; clear; replot;

set xrange [word(AX,6)+0:word(AX,7)+0]
R6(x)=1.0;
G6(x)=1.0;
B6(x)=b6a*x**3+b6b*x**2+b6c*x+b6d; b6a=b6b=1E-10; b6c=b6d=1; fit B6(x) "<(cat cyanhalo_lut_4xlog10.csv|perl -ne 'print " . '"' . "$.,$_" . '"' ."')" u 1:4 via b6a,b6b,b6c,b6d;
print sprintf("R6(x) = 1.0;");
print sprintf("G6(x) = 1.0;");
print sprintf("B6(x) = %+0.8G *x**3 %+0.8G *x**2 %+0.8G *x %+0.8G;", b6a, b6b, b6c, b6d);
set xrange [word(AX,1)+0:word(AX,7)+0]; clear; replot;

unset multiplot;
show functions; show variables;

RANGE=word(AX,7) - word(AX,1); OFFSET= word(AX,1)+0.0;
r(x)=R(x*RANGE - OFFSET); g(x)=G(x*RANGE - OFFSET); b(x)=B(x*RANGE -OFFSET);
set palette model RGB functions r(gray), g(gray), b(gray);
print 'RANGE=word(AX,7) - word(AX,1); OFFSET= word(AX,1)+0.0;';
print 'r(x)=R(x*RANGE - OFFSET); g(x)=G(x*RANGE - OFFSET); b(x)=B(x*RANGE -OFFSET);';
print 'set palette model RGB functions r(gray), g(gray), b(gray);';
set xrange [word(AX,1)+0:word(AX,7)+0]
